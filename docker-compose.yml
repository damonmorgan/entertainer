services:

#mdns
  mdns:
    container_name: mdns
    image: damonmorgan/docker-mdns
    environment:
      SERVER_HOST_NAME: 'entertainer'
      SERVER_DOMAIN_NAME: 'local'
      NETWORK_INTERFACE: 'enp2s0'
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/dbus-1/system.d:/system-dbus
    network_mode: "host"
    privileged: true
    restart: unless-stopped

#dynamic dns updater
  cloudflare-ddns:
    image: timothyjmiller/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    security_opt:
      - no-new-privileges:true
    network_mode: 'host'
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/cloudflare/config.json:/config.json
    restart: unless-stopped

#Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultRule=HostRegexp(`^{{ .ContainerName }}.*$`)"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "mdns.host=traefik.local"
      - "traefik.enable=true"
      - "traefik.http.routers.admin.entrypoints=web"
      - "traefik.http.services.admin.loadbalancer.server.port=8080"
    restart: unless-stopped

# HTPC Portal
  heimdall:
    container_name: heimdall
    image: lscr.io/linuxserver/heimdall:latest
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/heimdall:/config
    environment:
      PGID: 1000
      PUID: 1000
      TZ: 'Europe/London'
      ALLOW_INTERNAL_REQUESTS: 'true'
    labels:
      - "mdns.host=heimdall.local"
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.entrypoints=web"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
    restart: unless-stopped

# TV
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/sonarr:/config
      - ${TV_DESTINATION_PATH}:/tv
      - ${PROCESSING_PATH}/downloads:/downloads
    environment:
      PGID: 1000
      PUID: 1000
    labels:
      - "mdns.host=sonarr.local"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped

# Movies
  radarr:
    container_name: radarr
    image: linuxserver/radarr
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/radarr:/config
      - ${MOVIE_DESTINATION_PATH}:/movies
      - ${PROCESSING_PATH}/downloads:/downloads
    environment:
      PGID: 1000
      PUID: 1000
    labels:
      - "mdns.host=radarr.local"
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped

# Torrent Proxy
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:develop
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/prowlarr:/config
    environment:
      PGID: 1000
      PUID: 1000
    labels:
      - "mdns.host=prowlarr.local"
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    restart: unless-stopped

# Cloudflare Captcha Solver
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      LOG_LEVEL: 'info'
      LOG_HTML: false
      CAPTCHA_SOLVER: 'none'
      TZ: 'Europe/London'
    labels:
      - "mdns.host=flaresolverr.local"
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.entrypoints=web"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
    restart: unless-stopped

# Torrent Downloader
  transmission:
    container_name: transmission
    image: linuxserver/transmission
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/transmission:/config
      - ${PROCESSING_PATH}/downloads:/downloads
      - ${PROCESSING_PATH}/jackett-downloads:/watch
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      PGID: 1000
      PUID: 1000
    labels:
      - "mdns.host=transmission.local"
      - "traefik.enable=true"
      - "traefik.http.routers.transmission.entrypoints=web"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"
    restart: unless-stopped

# Tor proxy so jackett can bypass ISP filters (NOT for anonymity - use something like Tails for that)
  torproxy:
    container_name: torproxy
    image: damonmorgan/tor-privoxy-alpine
    ports:
      - "8118:8118"
      - "9050:9050"
    restart: unless-stopped

# Auto update containers
  watchtower:
    container_name: watchtower
    image: v2tec/watchtower
    command: --cleanup --interval 86400
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

# Backups
  crashplan-pro:
    container_name: crashplan
    image: jlesage/crashplan-pro
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/crashplan:/config
      - ${BACKUP_PATH}:/storage
    environment:
      GROUP_ID: 1000
      USER_ID: 1000
      CRASHPLAN_SRV_MAX_MEM: 3072M
    labels:
      - "mdns.host=crashplan.local"
      - "traefik.enable=true"
      - "traefik.http.routers.crashplan.entrypoints=web"
      - "traefik.http.services.crashplan.loadbalancer.server.port=5800"
    restart: unless-stopped

# Pihole
  pihole:
    container_name: pi
    image: pihole/pihole
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/etc-pihole/:/etc/pihole/
      - ${CONTAINERS_CONFIG_PATH}/etc-dnsmasqd/:/etc/dnsmasq.d/
    environment:
      DNS1: 1.1.1.3
      DNS2: 1.0.0.3
      VIRTUAL_HOST: pihole.local
      TZ: 'Europe/London'
      WEBPASSWORD: pihole
    restart: unless-stopped
    labels:
       - "mdns.host=pihole.local"
       - "traefik.enable=true"
       - "traefik.http.routers.pihole.entrypoints=web"
       - "traefik.http.services.pihole.loadbalancer.server.port=80"

# SpeedTest
  speedtest:
    container_name: speed
    image: lscr.io/linuxserver/speedtest-tracker:latest
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/speedtest:/config
    environment:
      PGID: 1000
      PUID: 1000
      APP_KEY: 'base64:pptxkKR15aTmNibU3NjFrHMlD/n189zuFpntzH8088M='
      DB_CONNECTION: 'sqlite'
      SPEEDTEST_SCHEDULE: '15 */2 * * *'
      TZ: 'Europe/London'
      DISPLAY_TIMEZONE: 'Europe/London'
      PUBLIC_DASHBOARD: 'true'
      PRUNE_RESULTS_OLDER_THAN: '30'
    labels:
      - "mdns.host=speed.local"
      - "traefik.enable=true"
      - "traefik.http.routers.speed.entrypoints=web"
      - "traefik.http.services.speed.loadbalancer.server.port=80"
    restart: unless-stopped

# Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    labels:
      - "mdns.host=prometheus.local"
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: unless-stopped

# Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "1000"
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/grafana:/var/lib/grafana
    labels:
      - "mdns.host=grafana.local"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: unless-stopped

# Wireguard Prometheus metrics
  wireguard-prometheus:
    container_name: wireguard
    image: mindflavor/prometheus-wireguard-exporter
    volumes:
      - ${CONTAINERS_CONFIG_PATH}/wireguard/wghub.conf:/usr/local/bin/wghub.conf
    command:
      - "-a=true"
      - "-n=/usr/local/bin/wghub.conf"
      - "-i=wghub"
      - "-v=true"
      - "-p=9586"
      - "-s=false"
      - "-r=false"
      - "-l=0.0.0.0"
      - "-d=true"
    network_mode: "host"
    cap_add:
      - NET_ADMIN
    labels:
      - "mdns.host=wireguard.local"
      - "traefik.enable=true"
      - "traefik.http.routers.wireguard.entrypoints=web"
      - "traefik.http.services.wireguard.loadbalancer.server.port=9586"
    restart: unless-stopped
